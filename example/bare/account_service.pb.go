// Code generated by "protoc-gen-entpb". DO NOT EDIT

package bare

import (
	context "context"
	uuid "github.com/google/uuid"
	runtime "github.com/lesomnus/entpb/cmd/protoc-gen-entpb/runtime"
	ent "github.com/lesomnus/entpb/example/ent"
	pb "github.com/lesomnus/entpb/example/pb"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
)

type AccountServiceServer struct {
	db *ent.Client
	pb.UnimplementedAccountServiceServer
}

func (s *AccountServiceServer) Create(ctx context.Context, req *pb.Account) (*pb.Account, error) {
	q := s.db.Account.Create()
	q.SetRole(toEntRole(req.Role))
	if v, err := uuid.FromBytes(req.Owner.GetId()); err != nil {
		return nil, status.Errorf(codes.InvalidArgument, "owner: %s", err)
	} else {
		q.SetOwnerID(v)
	}
	res, err := q.Save(ctx)
	if err != nil {
		return nil, runtime.EntErrorToStatus(err)
	}

	return toProtoAccount(res), nil
}
func toProtoAccount(v *ent.Account) *pb.Account {
	m := &pb.Account{}
	m.Id = v.ID[:]
	m.DateCreated = timestamppb.New(v.DateCreated)
	m.Role = toPbGroupRole(v.Role)
	if v := v.Edges.Owner; v != nil {
		m.Owner = &pb.Actor{Id: v.ID[:]}
	}
	return m
}
