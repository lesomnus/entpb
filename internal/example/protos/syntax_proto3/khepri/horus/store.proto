// Code generated by "github.com/lesomuns/entpb/pbgen". DO NOT EDIT.

syntax = "proto3";

package entpb.directory;

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
import "khepri/horus/common.proto";

option go_package = "github.com/lesomnus/entpb/internal/example/pb";

service AccountService {
	rpc Create (CreateAccountRequest) returns (Account) {
		option (google.api.http) = {
			post: "/account"
			body: "*"
			additional_bindings: [
				{
					post: "/silo/{silo.query}/user/{owner.query}/account"
					body: "*"
				}
			]
		};
	}
	rpc Delete (GetAccountRequest) returns (google.protobuf.Empty) {
		option (google.api.http) = {
			delete: "/account/{query}"
			additional_bindings: [
				{
					delete: "/silo/{by_alias_in_silo.silo.query}/account/{by_alias_in_silo.alias}"
				},
				{
					delete: "/silo/{by_owner_in_silo.silo.query}/user/{by_owner_in_silo.owner.query}/account"
				}
			]
		};
	}
	rpc Get (GetAccountRequest) returns (Account) {
		option (google.api.http) = {
			get: "/account/{query}"
			additional_bindings: [
				{
					get: "/silo/{by_alias_in_silo.silo.query}/account/{by_alias_in_silo.alias}"
				},
				{
					get: "/silo/{by_owner_in_silo.silo.query}/user/{by_owner_in_silo.owner.query}/account"
				}
			]
		};
	}
	rpc Update (UpdateAccountRequest) returns (Account) {
		option (google.api.http) = {
			patch: "/account/{key.query}"
			body: "*"
			additional_bindings: [
				{
					patch: "/silo/{key.by_alias_in_silo.silo.query}/account/{key.by_alias_in_silo.alias}"
					body: "*"
				},
				{
					patch: "/silo/{key.by_owner_in_silo.silo.query}/user/{key.by_owner_in_silo.owner.query}/account"
					body: "*"
				}
			]
		};
	}
}

service ConfService {
	rpc Create (CreateConfRequest) returns (Conf) {
		option (google.api.http) = {
			post: "/conf"
			body: "*"
		};
	}
	rpc Delete (GetConfRequest) returns (google.protobuf.Empty) {
		option (google.api.http) = {
			delete: "/conf/{query}"
		};
	}
	rpc Get (GetConfRequest) returns (Conf) {
		option (google.api.http) = {
			get: "/conf/{query}"
		};
	}
	rpc Update (UpdateConfRequest) returns (Conf) {
		option (google.api.http) = {
			patch: "/conf/{key.query}"
			body: "*"
		};
	}
}

service IdentityService {
	rpc Create (CreateIdentityRequest) returns (Identity) {
		option (google.api.http) = {
			post: "/identity"
			body: "*"
			additional_bindings: [
				{
					post: "/user/{owner.query}/identity"
					body: "*"
				}
			]
		};
	}
	rpc Delete (GetIdentityRequest) returns (google.protobuf.Empty) {
		option (google.api.http) = {
			delete: "/identity/{query}"
		};
	}
	rpc Get (GetIdentityRequest) returns (Identity) {
		option (google.api.http) = {
			get: "/identity/{query}"
		};
	}
	rpc Update (UpdateIdentityRequest) returns (Identity) {
		option (google.api.http) = {
			patch: "/identity/{key.query}"
			body: "*"
		};
	}
}

service InvitationService {
	rpc Create (CreateInvitationRequest) returns (Invitation) {
		option (google.api.http) = {
			post: "/invitation"
			body: "*"
			additional_bindings: [
				{
					post: "/silo/{silo.query}/account/{inviter.query}/invitation"
					body: "*"
				}
			]
		};
	}
	rpc Delete (GetInvitationRequest) returns (google.protobuf.Empty) {
		option (google.api.http) = {
			delete: "/invitation/{query}"
		};
	}
	rpc Get (GetInvitationRequest) returns (Invitation) {
		option (google.api.http) = {
			get: "/invitation/{query}"
		};
	}
	rpc Update (UpdateInvitationRequest) returns (Invitation) {
		option (google.api.http) = {
			patch: "/invitation/{key.query}"
			body: "*"
		};
	}
}

service MembershipService {
	rpc Create (CreateMembershipRequest) returns (Membership) {
		option (google.api.http) = {
			post: "/membership"
			body: "*"
			additional_bindings: [
				{
					post: "/team/{team.query}/account/{account.query}/membership"
					body: "*"
				}
			]
		};
	}
	rpc Delete (GetMembershipRequest) returns (google.protobuf.Empty) {
		option (google.api.http) = {
			delete: "/membership/{query}"
		};
	}
	rpc Get (GetMembershipRequest) returns (Membership) {
		option (google.api.http) = {
			get: "/membership/{query}"
		};
	}
	rpc Update (UpdateMembershipRequest) returns (Membership) {
		option (google.api.http) = {
			patch: "/membership/{key.query}"
			body: "*"
		};
	}
}

service SiloService {
	rpc Create (CreateSiloRequest) returns (Silo) {
		option (google.api.http) = {
			post: "/silo"
			body: "*"
		};
	}
	rpc Delete (GetSiloRequest) returns (google.protobuf.Empty) {
		option (google.api.http) = {
			delete: "/silo/{query}"
		};
	}
	rpc Get (GetSiloRequest) returns (Silo) {
		option (google.api.http) = {
			get: "/silo/{query}"
		};
	}
	rpc Update (UpdateSiloRequest) returns (Silo) {
		option (google.api.http) = {
			patch: "/silo/{key.query}"
			body: "*"
		};
	}
}

service TeamService {
	rpc Create (CreateTeamRequest) returns (Team) {
		option (google.api.http) = {
			post: "/team"
			body: "*"
			additional_bindings: [
				{
					post: "/silo/{silo.query}/team"
					body: "*"
				}
			]
		};
	}
	rpc Delete (GetTeamRequest) returns (google.protobuf.Empty) {
		option (google.api.http) = {
			delete: "/team/{query}"
			additional_bindings: [
				{
					delete: "/silo/{by_alias_in_silo.silo.query}/team/{by_alias_in_silo.alias}"
				}
			]
		};
	}
	rpc Get (GetTeamRequest) returns (Team) {
		option (google.api.http) = {
			get: "/team/{query}"
			additional_bindings: [
				{
					get: "/silo/{by_alias_in_silo.silo.query}/team/{by_alias_in_silo.alias}"
				}
			]
		};
	}
	rpc Update (UpdateTeamRequest) returns (Team) {
		option (google.api.http) = {
			patch: "/team/{key.query}"
			body: "*"
			additional_bindings: [
				{
					patch: "/silo/{key.by_alias_in_silo.silo.query}/team/{key.by_alias_in_silo.alias}"
					body: "*"
				}
			]
		};
	}
}

service TokenService {
	rpc Create (CreateTokenRequest) returns (Token) {
		option (google.api.http) = {
			post: "/token"
			body: "*"
			additional_bindings: [
				{
					post: "/user/{owner.query}/token"
					body: "*"
				}
			]
		};
	}
	rpc Delete (GetTokenRequest) returns (google.protobuf.Empty) {
		option (google.api.http) = {
			delete: "/token/{query}"
		};
	}
	rpc Get (GetTokenRequest) returns (Token) {
		option (google.api.http) = {
			get: "/token/{query}"
		};
	}
	rpc Update (UpdateTokenRequest) returns (Token) {
		option (google.api.http) = {
			patch: "/token/{key.query}"
			body: "*"
		};
	}
}

service UserService {
	rpc Create (CreateUserRequest) returns (User) {
		option (google.api.http) = {
			post: "/user"
			body: "*"
		};
	}
	rpc Delete (GetUserRequest) returns (google.protobuf.Empty) {
		option (google.api.http) = {
			delete: "/user/{query}"
		};
	}
	rpc Get (GetUserRequest) returns (User) {
		option (google.api.http) = {
			get: "/user/{query}"
		};
	}
	rpc Update (UpdateUserRequest) returns (User) {
		option (google.api.http) = {
			patch: "/user/{key.query}"
			body: "*"
		};
	}
}

message CreateAccountRequest {
	optional string alias = 2;
	GetUserRequest owner = 3;
	GetSiloRequest silo = 4;
	optional Role role = 6;
	optional string name = 7;
	optional string description = 8;
}

message CreateConfRequest {
	string id = 1;
	string value = 2;
}

message CreateIdentityRequest {
	GetUserRequest owner = 2;
	string kind = 3;
	string value = 4;
	optional string name = 7;
	optional string description = 8;
}

message CreateInvitationRequest {
	GetAccountRequest inviter = 3;
	GetSiloRequest silo = 4;
	string invitee = 5;
	string type = 6;
	optional google.protobuf.Timestamp date_canceled = 11;
	optional google.protobuf.Timestamp date_declined = 12;
	optional google.protobuf.Timestamp date_accepted = 13;
	google.protobuf.Timestamp date_expired = 14;
}

message CreateMembershipRequest {
	GetAccountRequest account = 3;
	GetTeamRequest team = 4;
	optional Role role = 6;
}

message CreateSiloRequest {
	optional string alias = 2;
	optional string name = 7;
	optional string description = 8;
}

message CreateTeamRequest {
	optional string alias = 2;
	GetSiloRequest silo = 3;
	optional string name = 7;
	optional string description = 8;
}

message CreateTokenRequest {
	string value = 2;
	string type = 3;
	optional string name = 4;
	GetUserRequest owner = 5;
	optional GetTokenRequest parent = 6;
	optional uint64 use_count_limit = 8;
	google.protobuf.Timestamp date_expired = 14;
}

message CreateUserRequest {
	optional string alias = 2;
	optional GetUserRequest parent = 3;
}

message GetAccountByAliasInSilo {
	string alias = 2;
	GetSiloRequest silo = 4;
}

message GetAccountByOwnerInSilo {
	GetUserRequest owner = 3;
	GetSiloRequest silo = 4;
}

message GetAccountRequest {
	oneof key {
		bytes id = 1;
		GetAccountByAliasInSilo by_alias_in_silo = 2;
		GetAccountByOwnerInSilo by_owner_in_silo = 3;
		string query = 14;
	}
}

message GetConfRequest {
	oneof key {
		string id = 1;
		string query = 14;
	}
}

message GetIdentityRequest {
	oneof key {
		bytes id = 1;
		string query = 14;
	}
}

message GetInvitationRequest {
	oneof key {
		bytes id = 1;
		string query = 14;
	}
}

message GetMembershipByAccountInTeam {
	GetAccountRequest account = 3;
	GetTeamRequest team = 4;
}

message GetMembershipRequest {
	oneof key {
		bytes id = 1;
		GetMembershipByAccountInTeam by_account_in_team = 3;
		string query = 14;
	}
}

message GetSiloRequest {
	oneof key {
		bytes id = 1;
		string alias = 2;
		string query = 14;
	}
}

message GetTeamByAliasInSilo {
	string alias = 2;
	GetSiloRequest silo = 3;
}

message GetTeamRequest {
	oneof key {
		bytes id = 1;
		GetTeamByAliasInSilo by_alias_in_silo = 2;
		string query = 14;
	}
}

message GetTokenRequest {
	oneof key {
		bytes id = 1;
		string value = 2;
		string query = 14;
	}
}

message GetUserRequest {
	oneof key {
		bytes id = 1;
		string alias = 2;
		string query = 14;
	}
}

message UpdateAccountRequest {
	GetAccountRequest key = 1;
	optional string alias = 2;
	optional Role role = 6;
	optional string name = 7;
	optional string description = 8;
}

message UpdateConfRequest {
	GetConfRequest key = 1;
	optional string value = 2;
}

message UpdateIdentityRequest {
	GetIdentityRequest key = 1;
	optional string name = 7;
	optional string description = 8;
}

message UpdateInvitationRequest {
	GetInvitationRequest key = 1;
	optional google.protobuf.Timestamp date_canceled = 11;
	optional google.protobuf.Timestamp date_declined = 12;
	optional google.protobuf.Timestamp date_accepted = 13;
	optional google.protobuf.Timestamp date_expired = 14;
}

message UpdateMembershipRequest {
	GetMembershipRequest key = 1;
	optional Role role = 6;
}

message UpdateSiloRequest {
	GetSiloRequest key = 1;
	optional string alias = 2;
	optional string name = 7;
	optional string description = 8;
}

message UpdateTeamRequest {
	GetTeamRequest key = 1;
	optional string alias = 2;
	optional string name = 7;
	optional string description = 8;
}

message UpdateTokenRequest {
	GetTokenRequest key = 1;
	optional string name = 4;
	optional uint64 use_count_limit = 8;
	optional google.protobuf.Timestamp date_expired = 14;
}

message UpdateUserRequest {
	GetUserRequest key = 1;
	optional string alias = 2;
	optional GetUserRequest parent = 3;
}
