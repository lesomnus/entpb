// Code generated by ent, DO NOT EDIT.

package conf

import (
	"time"

	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the conf type in the database.
	Label = "conf"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldDateCreated holds the string denoting the date_created field in the database.
	FieldDateCreated = "date_created"
	// FieldValue holds the string denoting the value field in the database.
	FieldValue = "value"
	// FieldDateUpdated holds the string denoting the date_updated field in the database.
	FieldDateUpdated = "date_updated"
	// Table holds the table name of the conf in the database.
	Table = "confs"
)

// Columns holds all SQL columns for conf fields.
var Columns = []string{
	FieldID,
	FieldDateCreated,
	FieldValue,
	FieldDateUpdated,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultDateCreated holds the default value on creation for the "date_created" field.
	DefaultDateCreated func() time.Time
	// ValueValidator is a validator for the "value" field. It is called by the builders before save.
	ValueValidator func(string) error
	// DefaultDateUpdated holds the default value on creation for the "date_updated" field.
	DefaultDateUpdated func() time.Time
	// UpdateDefaultDateUpdated holds the default value on update for the "date_updated" field.
	UpdateDefaultDateUpdated func() time.Time
)

// OrderOption defines the ordering options for the Conf queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByDateCreated orders the results by the date_created field.
func ByDateCreated(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldDateCreated, opts...).ToFunc()
}

// ByValue orders the results by the value field.
func ByValue(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldValue, opts...).ToFunc()
}

// ByDateUpdated orders the results by the date_updated field.
func ByDateUpdated(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldDateUpdated, opts...).ToFunc()
}
